{"version":3,"sources":["utils/firebase.js","utils/algolia.js","header.js","pages/Singin.js","components/Post.js","pages/Posts.js","pages/NewPost.js","pages/Post.js","pages/MyPosts.js","pages/MyCollections.js","pages/MySettings.js","components/Topics.js","components/MyMenu.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","algolia","algoliasearch","initIndex","Header","user","history","useHistory","React","useState","inputValue","setInputValue","results","setResults","Menu","Item","as","Link","to","Search","value","onSearchChange","e","search","then","result","searchResults","hits","map","hit","title","description","content","id","objectID","noResultsMessage","onResultSelect","push","position","Icon","Group","size","name","onClick","auth","signOut","Signin","activeItem","setActiveItem","email","setEmail","password","setPassword","errorMessage","setErrorMessage","isLoading","setIsLoading","Container","widths","active","Form","onSubmit","createUserWithEmailAndPassword","catch","error","code","signInWithEmailAndPassword","Input","label","onChange","target","placeholder","type","Message","negative","Button","loading","Post","post","Image","src","imageUrl","Content","Meta","author","photoURL","avatar","topic","displayName","Description","Extra","commentsCount","likedBy","length","Posts","location","useLocation","currentTopic","URLSearchParams","get","posts","setPosts","lastPostSnapshotRef","useRef","useEffect","firestore","collection","where","orderBy","limit","collectionSnapshot","data","docs","docSnapshot","current","onEnter","startAfter","NewPost","setTitle","setContent","topics","setTopics","topicName","setTopicName","file","setFile","doc","options","text","previewUrl","URL","createObjectURL","documentRef","fileRef","storage","ref","metadata","contentType","put","getDownloadURL","set","createdAt","Timestamp","now","currentUser","uid","floated","basic","htmlFor","style","display","files","TextArea","minHeight","Dropdown","selection","postId","useParams","setPost","commentContent","setCommentContent","comments","setComments","onSnapshot","isCollected","collectedBy","includes","isLiked","Subheader","toDate","toLocaleDateString","Segment","vertical","color","link","update","FieldValue","arrayRemove","arrayUnion","Comment","reply","batch","postRef","increment","commentRef","mailRef","message","subject","html","window","origin","commit","comment","Avatar","Author","Metadata","Text","MyPosts","MyCollections","MyName","isModalOpen","setIsModalOpen","setDisplayName","Modal","open","fluid","Actions","updateProfile","MyPhoto","previewImageUrl","image","wrapped","MyPassword","oldPassword","setOldPassword","newPassword","setNewPassword","credantial","EmailAuthProvider","credential","reauthenticateWithCredential","updatePassword","MySettings","Topics","List","animated","MyMenu","path","menuItem","pathname","App","setUser","onAuthStateChanged","currenUser","Grid","Row","Column","width","exact","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.61341e3a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDylOJK0OZlu_Fn1U2vBLgwRmcI9mvAcv4\",\r\n  authDomain: \"goopitrade.firebaseapp.com\",\r\n  projectId: \"goopitrade\",\r\n  storageBucket: \"goopitrade.appspot.com\",\r\n  messagingSenderId: \"65466195289\",\r\n  appId: \"1:65466195289:web:ae8e4513881ebcf66dc048\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import algoliasearch from \"algoliasearch\";\r\n\r\nconst client = algoliasearch(\"787YUZ8OWS\", \"1f3f3bd459c33b851ff3da282750d6ce\");\r\n\r\nconst algolia = client.initIndex(\"goopitrade\");\r\n\r\nexport default algolia;\r\n","import { Menu, Search } from \"semantic-ui-react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nimport React from \"react\";\r\nimport algolia from \"./utils/algolia\";\r\nimport firebase from \"./utils/firebase\";\r\n\r\nfunction Header({ user }) {\r\n  const history = useHistory();\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [results, setResults] = React.useState([]);\r\n\r\n  function onSearchChange(e, { value }) {\r\n    setInputValue(value);\r\n\r\n    algolia.search(value).then((result) => {\r\n      const searchResults = result.hits.map((hit) => {\r\n        return {\r\n          title: hit.title,\r\n          description: hit.content,\r\n          id: hit.objectID,\r\n        };\r\n      });\r\n      setResults(searchResults);\r\n    });\r\n  }\r\n\r\n  // 導引至所搜尋的文章\r\n  function onResultSelect(e, { result }) {\r\n    history.push(`/posts/${result.id}`);\r\n  }\r\n\r\n  return (\r\n    <Menu>\r\n      <Menu.Item as={Link} to=\"/posts\">\r\n        Goopi Trade\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <Search\r\n          value={inputValue}\r\n          onSearchChange={onSearchChange}\r\n          results={results}\r\n          noResultsMessage=\"找不到相關文章\"\r\n          onResultSelect={onResultSelect}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Menu position=\"right\">\r\n        {user ? (\r\n          <>\r\n            <Menu.Item as={Link} to=\"/new-post\">\r\n              <Icon.Group>\r\n                <Icon size=\"big\" name=\"edit outline\" />\r\n              </Icon.Group>\r\n            </Menu.Item>\r\n            <Menu.Item as={Link} to=\"/my/posts\">\r\n              <Icon.Group>\r\n                <Icon size=\"big\" name=\"user circle\" />\r\n              </Icon.Group>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              onClick={() => firebase.auth().signOut()}\r\n              as={Link}\r\n              to=\"/posts\"\r\n            >\r\n              <Icon.Group>\r\n                <Icon size=\"big\" name=\"sign out\" />\r\n              </Icon.Group>\r\n            </Menu.Item>\r\n          </>\r\n        ) : (\r\n          <Menu.Item as={Link} to=\"/signin\">\r\n            註冊/登入\r\n          </Menu.Item>\r\n        )}\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Menu, Form, Container, Message } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"firebase/auth\";\r\nimport firebase from \"../utils/firebase\";\r\n\r\nfunction Signin() {\r\n  const history = useHistory();\r\n  const [activeItem, setActiveItem] = React.useState(\"signin\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n  const [isLoading, setIsLoading] = React.useState(\"\");\r\n\r\n  function onSubmit() {\r\n    if (activeItem === \"register\") {\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(() => {\r\n          history.push(\"/posts\");\r\n          setIsLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          switch (error.code) {\r\n            case \"auth/email-already-in-use\":\r\n              setErrorMessage(\"信箱已存在\");\r\n              break;\r\n            case \"auth/invalid-email\":\r\n              setErrorMessage(\"信箱格式不正確\");\r\n              break;\r\n            case \"auth/weak-password\":\r\n              setErrorMessage(\"密碼強度不足\");\r\n              break;\r\n            default:\r\n          }\r\n          setIsLoading(false);\r\n        });\r\n    } else if (activeItem === \"signin\") {\r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(email, password)\r\n        .then(() => {\r\n          history.push(\"/posts\");\r\n          setIsLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          switch (error.code) {\r\n            case \"auth/invalid-email\":\r\n              setErrorMessage(\"信箱格式不正確\");\r\n              break;\r\n            case \"auth/user-not-found\":\r\n              setErrorMessage(\"信箱不存在\");\r\n              break;\r\n            case \"auth/wrong-password\":\r\n              setErrorMessage(\"密碼錯誤\");\r\n              break;\r\n            default:\r\n          }\r\n          setIsLoading(false);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Menu widths=\"2\">\r\n        <Menu.Item\r\n          active={activeItem === \"register\"}\r\n          onClick={() => {\r\n            setErrorMessage(\"\");\r\n            setActiveItem(\"register\");\r\n          }}\r\n        >\r\n          註冊\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          active={activeItem === \"signin\"}\r\n          onClick={() => setActiveItem(\"signin\")}\r\n        >\r\n          登入\r\n        </Menu.Item>\r\n      </Menu>\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Input\r\n          label=\"信箱\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"請輸入信箱\"\r\n        />\r\n        <Form.Input\r\n          label=\"密碼\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"請輸入密碼\"\r\n          type=\"password\"\r\n        />\r\n        {errorMessage && <Message negative>{errorMessage}</Message>}\r\n        <Form.Button loading={isLoading}>\r\n          {activeItem === \"register\" && \"註冊\"}\r\n          {activeItem === \"signin\" && \"登入\"}\r\n        </Form.Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n","import { Link } from \"react-router-dom\";\r\nimport { Item, Image, Icon } from \"semantic-ui-react\";\r\n\r\nfunction Post({ post }) {\r\n  return (\r\n    <Item as={Link} to={`/posts/${post.id}`}>\r\n      <Item.Image\r\n        src={\r\n          post.imageUrl ||\r\n          \"https://react.semantic-ui.com/images/wireframe/image.png\"\r\n        }\r\n      />\r\n      <Item.Content>\r\n        <Item.Meta>\r\n          {post.author.photoURL ? (\r\n            <Image src={post.author.photoURL} avatar />\r\n          ) : (\r\n            <Icon name=\"user circle\" />\r\n          )}{\" \"}\r\n          {post.topic}．{post.author.displayName || \"使用者\"}\r\n        </Item.Meta>\r\n        <Item.Header>{post.title}</Item.Header>\r\n        <Item.Description>{post.content}</Item.Description>\r\n        <Item.Extra>\r\n          留言{post.commentsCount || 0}．讚\r\n          {post.likedBy?.length || 0}\r\n        </Item.Extra>\r\n      </Item.Content>\r\n    </Item>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Item } from \"semantic-ui-react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Waypoint } from \"react-waypoint\";\r\n\r\nimport firebase from \"../utils/firebase\";\r\nimport Post from \"../components/Post\";\r\n\r\nfunction Posts() {\r\n  const location = useLocation();\r\n  const urlSearchParams = new URLSearchParams(location.search);\r\n  const currentTopic = urlSearchParams.get(\"topic\");\r\n  const [posts, setPosts] = React.useState([]);\r\n  const lastPostSnapshotRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    if (currentTopic) {\r\n      firebase\r\n        .firestore()\r\n        .collection(\"posts\")\r\n        .where(\"topic\", \"==\", currentTopic)\r\n        .orderBy(\"createdAt\", \"desc\")\r\n        .limit(5)\r\n        .get()\r\n        .then((collectionSnapshot) => {\r\n          const data = collectionSnapshot.docs.map((docSnapshot) => {\r\n            const id = docSnapshot.id;\r\n            return { ...docSnapshot.data(), id };\r\n          });\r\n          lastPostSnapshotRef.current =\r\n            collectionSnapshot.docs[collectionSnapshot.docs.length - 1];\r\n          setPosts(data);\r\n        });\r\n    } else {\r\n      firebase\r\n        .firestore()\r\n        .collection(\"posts\")\r\n        .orderBy(\"createdAt\", \"desc\")\r\n        .limit(5)\r\n        .get()\r\n        .then((collectionSnapshot) => {\r\n          const data = collectionSnapshot.docs.map((docSnapshot) => {\r\n            const id = docSnapshot.id;\r\n            return { ...docSnapshot.data(), id };\r\n          });\r\n          lastPostSnapshotRef.current =\r\n            collectionSnapshot.docs[collectionSnapshot.docs.length - 1];\r\n          setPosts(data);\r\n        });\r\n    }\r\n  }, [currentTopic]);\r\n  return (\r\n    <>\r\n      <Item.Group>\r\n        {posts.map((post) => {\r\n          return <Post post={post} key={post.id} />;\r\n        })}\r\n      </Item.Group>\r\n\r\n      {/* 網頁捲動至底部自動新增文章 */}\r\n      <Waypoint\r\n        onEnter={() => {\r\n          if (lastPostSnapshotRef.current) {\r\n            if (currentTopic) {\r\n              firebase\r\n                .firestore()\r\n                .collection(\"posts\")\r\n                .where(\"topic\", \"==\", currentTopic)\r\n                .orderBy(\"createdAt\", \"desc\")\r\n                .startAfter(lastPostSnapshotRef.current)\r\n                .limit(5)\r\n                .get()\r\n                .then((collectionSnapshot) => {\r\n                  const data = collectionSnapshot.docs.map((docSnapshot) => {\r\n                    const id = docSnapshot.id;\r\n                    return { ...docSnapshot.data(), id };\r\n                  });\r\n                  lastPostSnapshotRef.current =\r\n                    collectionSnapshot.docs[collectionSnapshot.docs.length - 1];\r\n                  setPosts([...posts, ...data]);\r\n                });\r\n            } else {\r\n              firebase\r\n                .firestore()\r\n                .collection(\"posts\")\r\n                .orderBy(\"createdAt\", \"desc\")\r\n                .startAfter(lastPostSnapshotRef.current)\r\n                .limit(5)\r\n                .get()\r\n                .then((collectionSnapshot) => {\r\n                  const data = collectionSnapshot.docs.map((docSnapshot) => {\r\n                    const id = docSnapshot.id;\r\n                    return { ...docSnapshot.data(), id };\r\n                  });\r\n                  lastPostSnapshotRef.current =\r\n                    collectionSnapshot.docs[collectionSnapshot.docs.length - 1];\r\n                  setPosts([...posts, ...data]);\r\n                });\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Container, Header, Form, Image, Button } from \"semantic-ui-react\";\r\n\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nimport firebase from \"../utils/firebase\";\r\n\r\nfunction NewPost() {\r\n  const history = useHistory();\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [content, setContent] = React.useState(\"\");\r\n  const [topics, setTopics] = React.useState([]);\r\n  const [topicName, setTopicName] = React.useState(\"\");\r\n  const [file, setFile] = React.useState(null);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"topics\")\r\n      .get()\r\n      .then((collectionSnapshot) => {\r\n        const data = collectionSnapshot.docs.map((doc) => {\r\n          return doc.data();\r\n        });\r\n        setTopics(data);\r\n      });\r\n  }, []);\r\n\r\n  const options = topics.map((topic) => {\r\n    return {\r\n      text: topic.name,\r\n      value: topic.name,\r\n    };\r\n  });\r\n\r\n  const previewUrl = file\r\n    ? URL.createObjectURL(file)\r\n    : \"https://react.semantic-ui.com/images/wireframe/image.png\";\r\n\r\n  function onSubmit() {\r\n    setIsLoading(true);\r\n    const documentRef = firebase.firestore().collection(\"posts\").doc();\r\n    const fileRef = firebase.storage().ref(\"post-images/\" + documentRef.id);\r\n    const metadata = {\r\n      contentType: file.type,\r\n    };\r\n    fileRef.put(file, metadata).then(() => {\r\n      fileRef.getDownloadURL().then((imageUrl) => {\r\n        documentRef\r\n          .set({\r\n            title,\r\n            content,\r\n            topic: topicName,\r\n            createdAt: firebase.firestore.Timestamp.now(),\r\n            author: {\r\n              displayName: firebase.auth().currentUser.displayName || \"\",\r\n              photoURL: firebase.auth().currentUser.photoURL || \"\",\r\n              uid: firebase.auth().currentUser.uid,\r\n              email: firebase.auth().currentUser.email,\r\n            },\r\n            imageUrl,\r\n          })\r\n          .then(() => {\r\n            setIsLoading(false);\r\n            history.push(\"/posts\");\r\n          });\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Header>發表文章</Header>\r\n      <Form onSubmit={onSubmit}>\r\n        <Image src={previewUrl} size=\"small\" floated=\"left\" />\r\n        <Button basic as=\"label\" htmlFor=\"post-image\">\r\n          上傳文章圖片\r\n        </Button>\r\n        <Form.Input\r\n          type=\"file\"\r\n          id=\"post-image\"\r\n          style={{ display: \"none\" }}\r\n          onChange={(e) => setFile(e.target.files[0])}\r\n        />\r\n        <Form.Input\r\n          placeholder=\"輸入文章標題\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <Form.TextArea\r\n          placeholder=\"輸入文章內容\r\n          商品名稱：\r\n          商品價格：\r\n          商品尺寸：\r\n          商品顏色：\r\n          商品狀況：\r\n          交易方式：\r\n          聯絡資訊：\r\n          \"\r\n          style={{ minHeight: 200 }}\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n        <Form.Dropdown\r\n          placeholder=\"選擇文章主題\"\r\n          options={options}\r\n          selection\r\n          value={topicName}\r\n          onChange={(e, { value }) => setTopicName(value)}\r\n        />\r\n        <Form.Button loading={isLoading}>送出</Form.Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NewPost;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Form, Header, Icon, Image, Segment, Comment } from \"semantic-ui-react\";\r\n\r\nimport firebase from \"../utils/firebase\";\r\n\r\nfunction Post() {\r\n  const { postId } = useParams();\r\n  const [post, setPost] = React.useState({\r\n    author: {},\r\n  });\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [commentContent, setCommentContent] = React.useState([]);\r\n  const [comments, setComments] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"posts\")\r\n      .doc(postId)\r\n      .onSnapshot((docSnapshot) => {\r\n        const data = docSnapshot.data();\r\n        setPost(data);\r\n      });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"posts\")\r\n      .doc(postId)\r\n      .collection(\"comments\")\r\n      .orderBy(\"createdAt\")\r\n      .onSnapshot((collectionSnapshot) => {\r\n        const data = collectionSnapshot.docs.map((doc) => {\r\n          return doc.data();\r\n        });\r\n\r\n        setComments(data);\r\n      });\r\n  }, []);\r\n\r\n  // 收藏功能\r\n  function toggleCollected() {\r\n    const uid = firebase.auth().currentUser.uid;\r\n    if (isCollected) {\r\n      firebase\r\n        .firestore()\r\n        .collection(\"posts\")\r\n        .doc(postId)\r\n        .update({\r\n          collectedBy: firebase.firestore.FieldValue.arrayRemove(uid),\r\n        });\r\n    } else {\r\n      firebase\r\n        .firestore()\r\n        .collection(\"posts\")\r\n        .doc(postId)\r\n        .update({\r\n          collectedBy: firebase.firestore.FieldValue.arrayUnion(uid),\r\n        });\r\n    }\r\n  }\r\n\r\n  // 按讚功能\r\n  function toggleLiked() {\r\n    const uid = firebase.auth().currentUser.uid;\r\n    if (isLiked) {\r\n      firebase\r\n        .firestore()\r\n        .collection(\"posts\")\r\n        .doc(postId)\r\n        .update({\r\n          likedBy: firebase.firestore.FieldValue.arrayRemove(uid),\r\n        });\r\n    } else {\r\n      firebase\r\n        .firestore()\r\n        .collection(\"posts\")\r\n        .doc(postId)\r\n        .update({\r\n          likedBy: firebase.firestore.FieldValue.arrayUnion(uid),\r\n        });\r\n    }\r\n  }\r\n\r\n  const isCollected = post.collectedBy?.includes(\r\n    firebase.auth().currentUser.uid\r\n  );\r\n  const isLiked = post.likedBy?.includes(firebase.auth().currentUser.uid);\r\n\r\n  function onSubmit() {\r\n    setIsLoading(true);\r\n    const firestore = firebase.firestore();\r\n    const batch = firestore.batch();\r\n    const postRef = firestore.collection(\"posts\").doc(postId);\r\n    batch.update(postRef, {\r\n      commentsCount: firebase.firestore.FieldValue.increment(1),\r\n    });\r\n\r\n    const commentRef = postRef.collection(\"comments\").doc();\r\n    batch.set(commentRef, {\r\n      content: commentContent,\r\n      createdAt: firebase.firestore.Timestamp.now(),\r\n      author: {\r\n        uid: firebase.auth().currentUser.uid,\r\n        displayName: firebase.auth().currentUser.displayName || \"\",\r\n        photoURL: firebase.auth().currentUser.photoURL || \"\",\r\n      },\r\n    });\r\n\r\n    // 留言Email通知功能\r\n    const mailRef = firestore.collection(\"mail\").doc();\r\n    batch.set(mailRef, {\r\n      to: post.author.email,\r\n      message: {\r\n        subject: `新訊息：${\r\n          firebase.auth().currentUser.displayName\r\n        } 剛剛回覆了你的文章`,\r\n        html: `<a href=\"${window.location.origin}/posts/${postId}\">前往文章</a>`,\r\n      },\r\n    });\r\n\r\n    batch.commit().then(() => {\r\n      setCommentContent(\"\");\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {post.author.photoURL ? (\r\n        <Image src={post.author.photoURL} avatar />\r\n      ) : (\r\n        <Icon name=\"user circle\" />\r\n      )}\r\n      {\"\"}\r\n      {post.author.displayName || \"使用者\"}\r\n      <Header>\r\n        {post.title}\r\n        <Header.Subheader>\r\n          {post.topic}．{post.createdAt?.toDate().toLocaleDateString()}\r\n        </Header.Subheader>\r\n      </Header>\r\n      <Image src={post.imageUrl} />\r\n      <Segment basic vertical>\r\n        {post.content}\r\n      </Segment>\r\n      <Segment basic vertical>\r\n        留言 {post.commentsCount || 0}．讚 {post.likedBy?.length || 0}．\r\n        <Icon\r\n          name={`thumbs up${isLiked ? \"\" : \"\"} `}\r\n          color={isLiked ? \"blue\" : \"grey\"}\r\n          link\r\n          onClick={toggleLiked}\r\n        />\r\n        ．\r\n        <Icon\r\n          name={`heart${isCollected ? \"\" : \"\"}`}\r\n          color={isCollected ? \"red\" : \"grey\"}\r\n          link\r\n          onClick={toggleCollected}\r\n        />\r\n      </Segment>\r\n      <Comment.Group>\r\n        <Form reply>\r\n          <Form.TextArea\r\n            value={commentContent}\r\n            onChange={(e) => setCommentContent(e.target.value)}\r\n          />\r\n          <Form.Button onClick={onSubmit} loading={isLoading}>\r\n            留言\r\n          </Form.Button>\r\n        </Form>\r\n        <Header>共{post.commentsCount || 0}則留言</Header>\r\n        {comments.map((comment) => {\r\n          return (\r\n            <Comment>\r\n              <Comment.Avatar src={comment.author.photoURL} />\r\n              <Comment.Content>\r\n                <Comment.Author as=\"span\">\r\n                  {comment.author.displayName || \"使用者\"}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  {comment.createdAt.toDate().toLocaleDateString()}\r\n                </Comment.Metadata>\r\n                <Comment.Text>{comment.content}</Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          );\r\n        })}\r\n      </Comment.Group>\r\n    </>\r\n  );\r\n}\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Item, Header } from \"semantic-ui-react\";\r\n\r\nimport Post from \"../components/Post\";\r\nimport firebase from \"../utils/firebase\";\r\n\r\nfunction MyPosts() {\r\n  const [posts, setPosts] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"posts\")\r\n      .where(\"author.uid\", \"==\", firebase.auth().currentUser.uid)\r\n      .get()\r\n      .then((collectionSnapshot) => {\r\n        const data = collectionSnapshot.docs.map((docSnapshot) => {\r\n          const id = docSnapshot.id;\r\n          return { ...docSnapshot.data(), id };\r\n        });\r\n        setPosts(data);\r\n      });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Header>我的文章</Header>\r\n      <Item.Group>\r\n        {posts.map((post) => {\r\n          return <Post post={post} key={post.id} />;\r\n        })}\r\n      </Item.Group>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { Item, Header } from \"semantic-ui-react\";\r\n\r\nimport Post from \"../components/Post\";\r\nimport firebase from \"../utils/firebase\";\r\n\r\nfunction MyCollections() {\r\n  const [posts, setPosts] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"posts\")\r\n      .where(\"collectedBy\", \"array-contains\", firebase.auth().currentUser.uid)\r\n      .get()\r\n      .then((collectionSnapshot) => {\r\n        const data = collectionSnapshot.docs.map((docSnapshot) => {\r\n          const id = docSnapshot.id;\r\n          return { ...docSnapshot.data(), id };\r\n        });\r\n        setPosts(data);\r\n      });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Header>我的收藏</Header>\r\n      <Item.Group>\r\n        {posts.map((post) => {\r\n          return <Post post={post} key={post.id} />;\r\n        })}\r\n      </Item.Group>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyCollections;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Header,\r\n  Modal,\r\n  Segment,\r\n  Input,\r\n  Image,\r\n} from \"semantic-ui-react\";\r\n\r\nimport firebase from \"../utils/firebase\";\r\n\r\n// 會員名稱修改\r\nfunction MyName() {\r\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n  const [displayName, setDisplayName] = React.useState(\"\");\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n  const user = firebase.auth().currentUser || {};\r\n\r\n  function OnSubmit() {\r\n    setIsLoading(true);\r\n    user\r\n      .updateProfile({\r\n        displayName,\r\n      })\r\n      .then(() => {\r\n        setIsLoading(false);\r\n        setDisplayName(\"\");\r\n        setIsModalOpen(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header size=\"small\">\r\n        會員名稱\r\n        <Button floated=\"right\" onClick={() => setIsModalOpen(true)}>\r\n          修改\r\n        </Button>\r\n      </Header>\r\n      <Segment vertical>{user.displayName}</Segment>\r\n      <Modal open={isModalOpen} size=\"mini\">\r\n        <Modal.Header>修改會員名稱</Modal.Header>\r\n        <Modal.Content>\r\n          <Input\r\n            placeholder=\"請輸入新的會員名稱\"\r\n            value={displayName}\r\n            onChange={(e) => setDisplayName(e.target.value)}\r\n            fluid\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button onClick={() => setIsModalOpen(false)}>取消</Button>\r\n          <Button onClick={OnSubmit} loading={isLoading}>\r\n            修改\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n// 會員照片修改\r\nfunction MyPhoto() {\r\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n  const [file, setFile] = React.useState(null);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const user = firebase.auth().currentUser || {};\r\n  const previewImageUrl = file ? URL.createObjectURL(file) : user.photoURL;\r\n\r\n  function onSubmit() {\r\n    setIsLoading(true);\r\n    const fileRef = firebase.storage().ref(\"user-photos/\" + user.uid);\r\n    const metadata = {\r\n      contentType: file.type,\r\n    };\r\n    fileRef.put(file, metadata).then(() => {\r\n      fileRef.getDownloadURL().then((imageUrl) => {\r\n        user\r\n          .updateProfile({\r\n            photoURL: imageUrl,\r\n          })\r\n          .then(() => {\r\n            setIsLoading(false);\r\n            setFile(null);\r\n            setIsModalOpen(false);\r\n          });\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header size=\"small\">\r\n        會員照片\r\n        <Button floated=\"right\" onClick={() => setIsModalOpen(true)}>\r\n          修改\r\n        </Button>\r\n      </Header>\r\n      <Segment vertical>\r\n        <Image src={user.photoURL} avatar />\r\n      </Segment>\r\n      <Modal open={isModalOpen} size=\"mini\">\r\n        <Modal.Header>修改會員照片</Modal.Header>\r\n        <Modal.Content image>\r\n          <Image src={previewImageUrl} avatar wrapped />\r\n          <Modal.Description>\r\n            <Button as=\"label\" htmlFor=\"post-image\">\r\n              上傳\r\n            </Button>\r\n            <Input\r\n              type=\"file\"\r\n              id=\"post-image\"\r\n              style={{ display: \"none\" }}\r\n              onChange={(e) => setFile(e.target.files[0])}\r\n            />\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button onClick={() => setIsModalOpen(false)}>取消</Button>\r\n          <Button onClick={onSubmit} loading={isLoading}>\r\n            修改\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n// 會員密碼修改\r\nfunction MyPassword() {\r\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n  const [oldPassword, setOldPassword] = React.useState(\"\");\r\n  const [newPassword, setNewPassword] = React.useState(\"\");\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n  const user = firebase.auth().currentUser || {};\r\n\r\n  function onSubmit() {\r\n    setIsLoading(true);\r\n    const credantial = firebase.auth.EmailAuthProvider.credential(\r\n      user.email,\r\n      oldPassword\r\n    );\r\n    user.reauthenticateWithCredential(credantial).then(() => {\r\n      user.updatePassword(newPassword).then(() => {\r\n        setIsModalOpen(false);\r\n        setOldPassword(\"\");\r\n        setNewPassword(\"\");\r\n        setIsLoading(false);\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header size=\"small\">\r\n        會員密碼\r\n        <Button floated=\"right\" onClick={() => setIsModalOpen(true)}>\r\n          修改\r\n        </Button>\r\n      </Header>\r\n      <Segment vertical>******</Segment>\r\n      <Modal open={isModalOpen} size=\"mini\">\r\n        <Modal.Header>修改會員密碼</Modal.Header>\r\n        <Modal.Content>\r\n          <Header size=\"small\">目前密碼</Header>\r\n          <Input\r\n            placeholder=\"輸入舊密碼\"\r\n            value={oldPassword}\r\n            onChange={(e) => setOldPassword(e.target.value)}\r\n            fluid\r\n          />\r\n          <Header size=\"small\">新密碼</Header>\r\n          <Input\r\n            placeholder=\"輸入新密碼\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            fluid\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button onClick={() => setIsModalOpen(false)}>取消</Button>\r\n          <Button onClick={onSubmit} loading={isLoading}>\r\n            修改\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MySettings({ user }) {\r\n  return (\r\n    <>\r\n      <Header>會員資料</Header>\r\n      <MyName user={user} />\r\n      <MyPhoto user={user} />\r\n      <MyPassword />\r\n    </>\r\n  );\r\n}\r\nexport default MySettings;\r\n","import React from \"react\";\r\nimport { List } from \"semantic-ui-react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nimport \"firebase/firestore\";\r\nimport firebase from \"../utils/firebase\";\r\n\r\nfunction Topics() {\r\n  const location = useLocation();\r\n  const urlSearchParams = new URLSearchParams(location.search);\r\n  const currentTopic = urlSearchParams.get(\"topic\");\r\n  const [topics, setTopics] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"topics\")\r\n      .get()\r\n      .then((collectionSnapshot) => {\r\n        const data = collectionSnapshot.docs.map((doc) => {\r\n          return doc.data();\r\n        });\r\n        setTopics(data);\r\n      });\r\n  }, []);\r\n  return (\r\n    <List animated selection>\r\n      {topics.map((topic) => {\r\n        return (\r\n          <List.Item\r\n            key={topic.name}\r\n            as={Link}\r\n            to={`/posts?topic=${topic.name}`}\r\n            active={currentTopic === topic.name}\r\n          >\r\n            {topic.name}\r\n          </List.Item>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default Topics;\r\n","import React from \"react\";\r\nimport { List } from \"semantic-ui-react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport \"firebase/firestore\";\r\n\r\nfunction MyMenu() {\r\n  const location = useLocation();\r\n  const menuItems = [\r\n    {\r\n      name: \"我的文章\",\r\n      path: \"/my/posts\",\r\n    },\r\n    {\r\n      name: \"我的收藏\",\r\n      path: \"/my/collections\",\r\n    },\r\n    {\r\n      name: \"會員資料\",\r\n      path: \"/my/settings\",\r\n    },\r\n  ];\r\n  return (\r\n    <List animated selection>\r\n      {menuItems.map((menuItem) => {\r\n        return (\r\n          <List.Item\r\n            as={Link}\r\n            to={menuItem.path}\r\n            key={menuItem.name}\r\n            active={menuItem.path === location.pathname}\r\n          >\r\n            {menuItem.name}\r\n          </List.Item>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default MyMenu;\r\n","import { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { Container, Grid } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nimport firebase from \"./utils/firebase\";\r\n\r\nimport Header from \"./header\";\r\nimport Signin from \"./pages/Singin\";\r\nimport Posts from \"./pages/Posts\";\r\nimport NewPost from \"./pages/NewPost\";\r\nimport Post from \"./pages/Post\";\r\nimport MyPosts from \"./pages/MyPosts\";\r\nimport MyCollections from \"./pages/MyCollections\";\r\nimport MySettings from \"./pages/MySettings\";\r\n\r\nimport Topics from \"./components/Topics\";\r\nimport MyMenu from \"./components/MyMenu\";\r\n\r\nfunction App() {\r\n  const [user, setUser] = React.useState();\r\n  React.useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((currenUser) => {\r\n      setUser(currenUser);\r\n    });\r\n  }, []);\r\n  return (\r\n    <BrowserRouter>\r\n      <Header user={user} />\r\n      <Switch>\r\n        <Route path=\"/posts\">\r\n          <Container>\r\n            <Grid>\r\n              <Grid.Row>\r\n                <Grid.Column width={3}>\r\n                  <Topics />\r\n                </Grid.Column>\r\n                <Grid.Column width={10}>\r\n                  <Switch>\r\n                    <Route path=\"/posts\" exact>\r\n                      <Posts />\r\n                    </Route>\r\n                    <Route path=\"/posts/:postId\" exact>\r\n                      {user !== null ? <Post /> : <Redirect to=\"/signin\" />}\r\n                    </Route>\r\n                  </Switch>\r\n                </Grid.Column>\r\n                <Grid.Column width={3}></Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Container>\r\n        </Route>\r\n\r\n        <Route path=\"/my\">\r\n          {user !== null ? (\r\n            <Container>\r\n              <Grid>\r\n                <Grid.Row>\r\n                  <Grid.Column width={3}>\r\n                    <MyMenu />\r\n                  </Grid.Column>\r\n                  <Grid.Column width={10}>\r\n                    <Switch>\r\n                      <Route path=\"/my/posts\" exact>\r\n                        <MyPosts />\r\n                      </Route>\r\n                      <Route path=\"/my/collections\" exact>\r\n                        <MyCollections />\r\n                      </Route>\r\n                      <Route path=\"/my/settings\" exact>\r\n                        <MySettings user={user} />\r\n                      </Route>\r\n                    </Switch>\r\n                  </Grid.Column>\r\n                  <Grid.Column width={3}></Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Container>\r\n          ) : (\r\n            <Redirect to=\"/posts\" />\r\n          )}\r\n        </Route>\r\n\r\n        <Route path=\"/signin\" exact>\r\n          {user !== null ? <Redirect to=\"/posts\" /> : <Signin />}\r\n        </Route>\r\n        <Route path=\"/new-post\" exact>\r\n          {user !== null ? <NewPost /> : <Redirect to=\"/posts\" />}\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDom from \"react-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}